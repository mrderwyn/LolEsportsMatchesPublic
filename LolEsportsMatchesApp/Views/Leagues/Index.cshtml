@model LolEsportsMatchesApp.Models.PagedModel<LolEsportsMatchesApp.ViewModels.GameResultViewModel>
@{
    ViewData["Title"] = "League games";
}

    @{
        var champsList = ViewData["champsList"] as List<LolData.Services.Champions.Champion>;
        var drop = new List<SelectListItem>
        {
            new SelectListItem{ Text = "Champion", Value = "", Disabled= true},
            new SelectListItem{ Text = "All Champions", Value = ""},
            new SelectListItem{ Text = "────────", Value = "separator", Disabled= true},
        }.Concat(champsList!.Select(c => new SelectListItem { Text = c.Name, Value = c.Id }));
    }

     <form method="get">
         <div class="filter-container">
             @Html.DropDownList("champId", drop, ViewData["selectedChamp"])
             
             <div class="filter-buttons">
                 <input type="submit" value="Apply" class="btn btn-default"/>
                 
                 <a asp-action="Index"
                        asp-route-id="@Model.CurrentId"
                        class="btn btn-default">Clear</a>
             </div>
         </div>
     </form>

     <table>
             @foreach (var r in Model.Elements)
            {
                <tr>
                    <td>
                        <a href="@Url.ActionLink("Index", "Game", new {id=@r.Id})">
                            <div class="date">
                                <p>@Html.DisplayFor(m => r.GameDate)</p>
                            </div>
                        </a>
                    </td>
                    <td>
                        <div class="game-result-container">
                            <div class="blue-team-result">
                                <a href="@Url.ActionLink("DisplayTeam", "Teams", new { id=@r.BlueTeam.Slug })">
                                    <div class="team-info">
                                        <img class="box" src="@r.BlueTeam.Image">
                                        <div class="team-code">
                                            <p>@r.BlueTeam.Code</p>
                                        </div>
                                    </div>
                                </a>
                                <div class="blue-champs">
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        <img class="box" src="@r.ChampionsBlueImage[i]" alt="@r.ChampionsBlue[i]">
                                    }
                                </div>
                                <div class="score-box">
                                    <p>@r.KillsBlue</p>
                                </div>
                            </div>
                            <div class="red-team-result">
                                <a href="@Url.ActionLink("DisplayTeam", "Teams", new { id=@r.RedTeam.Slug })">
                                    <div class="team-info">
                                        <img class="box" src="@r.RedTeam.Image">
                                        <div class="team-code">
                                            <p>@r.RedTeam.Code</p>
                                        </div>
                                    </div>
                                </a>
                                <div class="red-champs">
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        <img class="box" src="@r.ChampionsRedImage[i]" alt="@r.ChampionsRed[i]">
                                    }
                                </div>
                                <div class="score-box">
                                    <p>@r.KillsRed</p>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
     </table>

    @{
        var prevDisabled = !Model.HasPrevPage ? "disabled" : string.Empty;
        var nextDisabled = !Model.HasNextPage ? "disabled" : string.Empty;
    }

     <a asp-action="Index"
        asp-route-id="@Model.CurrentId"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-champId="@ViewData["selectedChamp"]"
        asp-route-page="1"
        class="btn btn-default">First</a>

     <a asp-action="Index"
        asp-route-id="@Model.CurrentId"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-champId="@ViewData["selectedChamp"]"
        asp-route-page="@(Model.CurrentPage - 1)"
        class="btn btn-default @prevDisabled">Prev</a>

     <a asp-action="Index"
        asp-route-id="@Model.CurrentId"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-champId="@ViewData["selectedChamp"]"
        asp-route-page="@(Model.CurrentPage + 1)"
        class="btn btn-default @nextDisabled">Next</a>

     <a asp-action="Index"
        asp-route-id="@Model.CurrentId"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-champId="@ViewData["selectedChamp"]"
        asp-route-page="@Model.LastPage"
        class="btn btn-default">Last</a>