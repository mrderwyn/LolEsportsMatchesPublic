@model LolEsportsMatchesApp.Models.PagedModel<LolEsportsMatchesApp.Models.TeamModel>
@{
    ViewData["Title"] = "Teams list";
}

@Html.Display(null, "AdminPanelMenu")

<h1>Manage Teams</h1>

<a href="@Url.ActionLink("New")" class="btn btn-default">Create</a>

<form method="get">
    <div class="filter-container">
            <div class="droplist">
                @Html.DropDownList("region", ViewData["regionsDrop"] as IEnumerable<SelectListItem>, ViewData["selectedRegion"])
            </div>
            
        <div class="textbox">
            @Html.TextBox("name", ViewData["selectedName"], new { placeholder="Search team" })
        </div>
        
        <div class="filter-buttons">
            <input type="submit" value="Apply" class="btn btn-default"/>
            
            <a asp-action="Index"
                    class="btn btn-default">Clear</a>
        </div>
    </div>
</form>

<form method="get">
    @Html.TextBox("teamId", ViewData["selectedTeam"], new {placeholder = "input team id"})
    <input type="submit" value="Search team" class="btn btn-default" />
</form>

<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>Slug</th>
            <th>Name</th>
            <th>Code</th>
            <th>Region</th>
            <th>Image</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var team in Model.Elements)
        {
            <tr>
                <td>@Html.DisplayFor(item => team.Id)</td>
                <td>@Html.DisplayFor(item => team.Slug)</td>
                <td>@Html.DisplayFor(item => team.Name)</td>
                <td>@Html.DisplayFor(item => team.Code)</td>
                <td>@Html.DisplayFor(item => team.Region)</td>
                <td>@Html.DisplayFor(item => team.Image)</td>
                <td style="display: flex">
                    <div class="admin-edit-button-container">
                        <a href="@Url.ActionLink("Update", "AdminTeams", new {id = team.Id})"
                           class="btn btn-default">Edit</a>
                    </div>
                    <div class="admin-delete-button-container">
                        @using (Html.BeginForm("Delete", "AdminTeams",  new {id = team.Id}, FormMethod.Post))
                        {
                            <input type="submit" class="btn btn-danger"
                                   onclick="return confirm('Are you sure you wand to delete @team.Name team?')" value="Delete"/>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

    @{
        var prevDisabled = !Model.HasPrevPage ? "disabled" : string.Empty;
        var nextDisabled = !Model.HasNextPage ? "disabled" : string.Empty;
    }

     <a asp-action="Index"
        asp-route-region="@ViewData["selectedRegion"]"
        asp-route-name="@ViewData["selectedName"]"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-page="1"
        class="btn btn-default">First</a>

     <a asp-action="Index"
        asp-route-region="@ViewData["selectedRegion"]"
        asp-route-name="@ViewData["selectedName"]"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-page="@(Model.CurrentPage - 1)"
        class="btn btn-default @prevDisabled">Prev</a>

     <a asp-action="Index"
        asp-route-region="@ViewData["selectedRegion"]"
        asp-route-name="@ViewData["selectedName"]"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-page="@(Model.CurrentPage + 1)"
        class="btn btn-default @nextDisabled">Next</a>

     <a asp-action="Index"
        asp-route-region="@ViewData["selectedRegion"]"
        asp-route-name="@ViewData["selectedName"]"
        asp-route-teamId="@ViewData["selectedTeam"]"
        asp-route-page="@Model.LastPage"
        class="btn btn-default">Last</a>
